meteor create --release 1.12.1 <project name>
    --> We are using release 1.12.1 of Meteor

meteor npm install react react-dom
    --> We are using React and React-Dom together in these meteor instances

meteor npm install
    --> Make sure meteor installs all dependencies before actually running it

babeljs.io
    --> Good for checking how exactly React is handling js xml.

Imports and public --> Meteor respects these directories and does not load them.
    Understand that this is lazy loading - Meteor won't load these unless you tell it to.
Client and server --> Meteor respects these directories and quickly loads them from either client and server.
                    Everywhere else is fair-game for both client and server.
    Understand that this is eager loading - Meteor will load these directories if they change.

In package.json, you'll notice meteor is an attribute. You must do these if you don't want to be confused:
    a.) Remove it from there to restore the default behavior (Meteor loads main.* from either client or server)
    b.) Leave it there and import all files related to main from each javascript entry point file (e.g. main.html and main.css).
